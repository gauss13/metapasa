// <auto-generated />
using System;
using Meta.Entities.Contextos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MetaPasarela.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Meta.Entities.Modelos.Afiliacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo");

                    b.Property<string>("Correo");

                    b.Property<int>("EntidadId");

                    b.Property<string>("Nombre");

                    b.Property<string>("NumAfiliacion");

                    b.Property<int>("PasarelaId");

                    b.Property<string>("Referencia");

                    b.HasKey("Id");

                    b.HasIndex("EntidadId");

                    b.HasIndex("PasarelaId");

                    b.ToTable("Afiliaciones");
                });

            modelBuilder.Entity("Meta.Entities.Modelos.Entidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .HasMaxLength(3);

                    b.Property<int>("LocalizacionId");

                    b.Property<string>("Nombre")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("LocalizacionId");

                    b.ToTable("Entidades");
                });

            modelBuilder.Entity("Meta.Entities.Modelos.Grupo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasMaxLength(20);

                    b.Property<int>("PasarelaId");

                    b.Property<int>("RedPagoId");

                    b.HasKey("Id");

                    b.HasIndex("PasarelaId");

                    b.HasIndex("RedPagoId");

                    b.ToTable("Grupos");
                });

            modelBuilder.Entity("Meta.Entities.Modelos.GrupoPais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GrupoId");

                    b.Property<int>("PaisId");

                    b.HasKey("Id");

                    b.ToTable("GrupoPaises");
                });

            modelBuilder.Entity("Meta.Entities.Modelos.Localizacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Localizaciones");
                });

            modelBuilder.Entity("Meta.Entities.Modelos.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .HasMaxLength(3);

                    b.Property<int?>("GrupoId");

                    b.Property<string>("Nombre")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("GrupoId");

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("Meta.Entities.Modelos.Pasarela", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasMaxLength(20);

                    b.Property<string>("Url")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Pasarelas");
                });

            modelBuilder.Entity("Meta.Entities.Modelos.RedPago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .HasMaxLength(3);

                    b.Property<string>("Nombre")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("RedPagos");
                });

            modelBuilder.Entity("Meta.Entities.Modelos.Regla", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EntidadId");

                    b.Property<DateTime>("FechaReg");

                    b.Property<int?>("GrupoId");

                    b.Property<int?>("PaisId");

                    b.Property<int>("PasarelaId");

                    b.Property<int>("RedPagoId");

                    b.Property<int>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("EntidadId");

                    b.HasIndex("GrupoId");

                    b.HasIndex("PaisId");

                    b.HasIndex("PasarelaId");

                    b.HasIndex("RedPagoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Reglas");
                });

            modelBuilder.Entity("Meta.Entities.Modelos.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Meta.Entities.Modelos.Transaccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Agente")
                        .HasMaxLength(50);

                    b.Property<bool>("Cancelado");

                    b.Property<string>("Concepto")
                        .HasMaxLength(50);

                    b.Property<bool>("Confirmado_Pms");

                    b.Property<string>("DivisaBase")
                        .HasMaxLength(3);

                    b.Property<string>("DivisaCobro")
                        .HasMaxLength(3);

                    b.Property<int>("EntidadId");

                    b.Property<string>("Estado")
                        .HasMaxLength(10);

                    b.Property<DateTime>("FechaExpiracion");

                    b.Property<DateTime>("FechaReg");

                    b.Property<bool>("Finalizado");

                    b.Property<string>("Idioma")
                        .HasMaxLength(20);

                    b.Property<decimal>("Importe")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("PasarelaId");

                    b.Property<decimal>("Ratio")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("RedPagoId");

                    b.Property<int>("TipoInvocacion");

                    b.Property<string>("Token")
                        .HasMaxLength(50);

                    b.Property<int>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("EntidadId");

                    b.HasIndex("PasarelaId");

                    b.HasIndex("RedPagoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Transacciones");
                });

            modelBuilder.Entity("Meta.Entities.Modelos.TransaccionEstado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estado")
                        .HasMaxLength(10);

                    b.Property<DateTime>("FechaReg");

                    b.Property<string>("RespuestaPasarela")
                        .HasMaxLength(150);

                    b.Property<int>("TransaccionId");

                    b.HasKey("Id");

                    b.ToTable("TransaccionEstados");
                });

            modelBuilder.Entity("Meta.Entities.Modelos.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo");

                    b.Property<string>("Correo")
                        .HasMaxLength(50);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50);

                    b.Property<DateTime>("FechaReg");

                    b.Property<string>("Password");

                    b.Property<int>("RolId");

                    b.Property<string>("UrlInvocacion")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Meta.Entities.Modelos.UsuarioEntidad", b =>
                {
                    b.Property<int>("UsuarioId");

                    b.Property<int>("EntidadId");

                    b.HasKey("UsuarioId", "EntidadId");

                    b.ToTable("UsuarioEntidades");
                });

            modelBuilder.Entity("Meta.Entities.Modelos.Afiliacion", b =>
                {
                    b.HasOne("Meta.Entities.Modelos.Entidad", "Entidad")
                        .WithMany()
                        .HasForeignKey("EntidadId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Meta.Entities.Modelos.Pasarela", "Pasarela")
                        .WithMany()
                        .HasForeignKey("PasarelaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Meta.Entities.Modelos.Entidad", b =>
                {
                    b.HasOne("Meta.Entities.Modelos.Localizacion", "Localizacion")
                        .WithMany()
                        .HasForeignKey("LocalizacionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Meta.Entities.Modelos.Grupo", b =>
                {
                    b.HasOne("Meta.Entities.Modelos.Pasarela", "Pasarela")
                        .WithMany()
                        .HasForeignKey("PasarelaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Meta.Entities.Modelos.RedPago", "RedPago")
                        .WithMany()
                        .HasForeignKey("RedPagoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Meta.Entities.Modelos.Pais", b =>
                {
                    b.HasOne("Meta.Entities.Modelos.Grupo")
                        .WithMany("Paises")
                        .HasForeignKey("GrupoId");
                });

            modelBuilder.Entity("Meta.Entities.Modelos.Regla", b =>
                {
                    b.HasOne("Meta.Entities.Modelos.Entidad", "Entidad")
                        .WithMany("Reglas")
                        .HasForeignKey("EntidadId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Meta.Entities.Modelos.Grupo", "Grupo")
                        .WithMany("Reglas")
                        .HasForeignKey("GrupoId");

                    b.HasOne("Meta.Entities.Modelos.Pais", "Pais")
                        .WithMany("Reglas")
                        .HasForeignKey("PaisId");

                    b.HasOne("Meta.Entities.Modelos.Pasarela", "Pasarela")
                        .WithMany("Reglas")
                        .HasForeignKey("PasarelaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Meta.Entities.Modelos.RedPago", "RedPago")
                        .WithMany("Reglas")
                        .HasForeignKey("RedPagoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Meta.Entities.Modelos.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Meta.Entities.Modelos.Transaccion", b =>
                {
                    b.HasOne("Meta.Entities.Modelos.Entidad", "Entidad")
                        .WithMany()
                        .HasForeignKey("EntidadId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Meta.Entities.Modelos.Pasarela", "Pasarela")
                        .WithMany()
                        .HasForeignKey("PasarelaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Meta.Entities.Modelos.RedPago", "RedPago")
                        .WithMany()
                        .HasForeignKey("RedPagoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Meta.Entities.Modelos.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Meta.Entities.Modelos.Usuario", b =>
                {
                    b.HasOne("Meta.Entities.Modelos.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
